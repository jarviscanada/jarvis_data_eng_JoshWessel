{"version":"NotebookV1","origId":3660845094001472,"name":"Retail Data Analytics with PySpark","language":"python","commands":[{"version":"CommandV1","origId":35741232725663,"guid":"26f0700f-564e-464d-bfa6-5adb3244d8cd","subtype":"command","commandType":"auto","position":3.7382798194885254,"command":"# Create a dataframe containing segment and mean frequency\nrfm_table_segments_frequency = (rfm_table_segments_agg\n                              .select(\"Segment\", \"MeanFrequency\")\n                              .orderBy(\"MeanFrequency\", ascending=[0])\n                             )\n\n# Display the resulting dataframe\ndisplay(rfm_table_segments_frequency)","commandVersion":10,"state":"finished","results":{"type":"table","data":[["Champions",19.482968369829685],["Can't Lose",15.929577464788732],["Loyal Customer",9.862127659574469],["At Risk",3.909694555112882],["Need Attention",3.157303370786517],["Potential Loyalists",2.5890603085554],["About to Sleep",1.3558441558441559],["Hibernating",1.254259501965924],["New Customers",1.0],["Promising",1.0]],"arguments":{},"addedWidgets":{},"removedWidgets":[],"schema":[{"name":"Segment","type":"\"string\"","metadata":"{}"},{"name":"MeanFrequency","type":"\"double\"","metadata":"{}"}],"overflow":false,"aggData":[],"aggSchema":[],"aggOverflow":false,"aggSeriesLimitReached":false,"aggError":"","aggType":"","plotOptions":null,"isJsonSchema":true,"dbfsResultPath":null,"datasetInfos":[{"name":"rfm_table_segments_frequency","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"Segment","nullable":true,"type":"string"},{"metadata":{},"name":"MeanFrequency","nullable":true,"type":"double"}],"type":"struct"},"tableIdentifier":null}],"columnCustomDisplayInfos":{},"metadata":{}},"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":1647364325917,"submitTime":1647364055415,"finishTime":1647364346558,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"357","height":"321","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["table",10]],"nuid":"7695350d-3cb5-4d14-b7da-c0c75cb751e0"},{"version":"CommandV1","origId":35741232725664,"guid":"439fefe3-c7de-471b-9da3-3edb626dbc68","subtype":"command","commandType":"auto","position":3.7382805347442627,"command":"# Create a dataframe containing segment and mean monetary\nrfm_table_segments_monetary = (rfm_table_segments_agg\n                              .select(\"Segment\", \"MeanMonetary\")\n                              .orderBy(\"MeanMonetary\", ascending=[0])\n                             )\n\n# Display the resulting dataframe\ndisplay(rfm_table_segments_monetary)","commandVersion":9,"state":"finished","results":{"type":"table","data":[["Champions",11036.223132603403],["Can't Lose",8355.677633802808],["Loyal Customer",4205.459817021268],["At Risk",1382.2359760956174],["Need Attention",1283.9465917602997],["Potential Loyalists",1155.427280504909],["About to Sleep",531.6770207792208],["Hibernating",438.52393315858416],["New Customers",356.2578571428571],["Promising",324.49699999999996]],"arguments":{},"addedWidgets":{},"removedWidgets":[],"schema":[{"name":"Segment","type":"\"string\"","metadata":"{}"},{"name":"MeanMonetary","type":"\"double\"","metadata":"{}"}],"overflow":false,"aggData":[],"aggSchema":[],"aggOverflow":false,"aggSeriesLimitReached":false,"aggError":"","aggType":"","plotOptions":null,"isJsonSchema":true,"dbfsResultPath":null,"datasetInfos":[{"name":"rfm_table_segments_monetary","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"Segment","nullable":true,"type":"string"},{"metadata":{},"name":"MeanMonetary","nullable":true,"type":"double"}],"type":"struct"},"tableIdentifier":null}],"columnCustomDisplayInfos":{},"metadata":{}},"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":1647364346564,"submitTime":1647364055424,"finishTime":1647364367162,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"357","height":"284","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["table",10]],"nuid":"f5df0703-1b83-4170-a153-a6e31dfdb908"},{"version":"CommandV1","origId":35741232725665,"guid":"348db146-2d07-41c3-b58a-b32b23866cc5","subtype":"command","commandType":"auto","position":3.7382808923721313,"command":"# Find the total customers\ntotal_customers = rfm_table_segments.select(\"CustomerID\").distinct().count()\nprint(total_customers)","commandVersion":277,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">5878\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[],"metadata":{}},"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":1647364367168,"submitTime":1647364055430,"finishTime":1647364377628,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"538","height":"361","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["html",32]],"nuid":"f04b882f-74cc-4e15-b85a-a80a3c748eb9"},{"version":"CommandV1","origId":1427167053524199,"guid":"16001ffc-d654-4fe7-bf67-1b84e65ba7cc","subtype":"command","commandType":"auto","position":3.70440673828125,"command":"# Create a dataframe containing month, quantity, price, and amount, grouped by month\nsales_df = (df\n            .select(\"Invoice\", date_format(\"InvoiceDate\", \"YYYYMM\").alias(\"YYYYMM\"), \"Quantity\", \"Price\")\n            .withColumn(\"Amount\", df[\"Quantity\"] * df[\"Price\"])\n            .groupBy(\"YYYYMM\").sum()\n            .withColumnRenamed(\"sum(Quantity)\",\"Quantity\")\n            .withColumnRenamed(\"sum(Price)\",\"Price\")\n            .withColumnRenamed(\"sum(Amount)\",\"Amount\")\n            .orderBy(col(\"YYYYMM\").asc())\n           )\n\n# Display the resulting dataframe\ndisplay(sales_df)","commandVersion":109,"state":"finished","results":{"type":"table","data":[["200912",390286,106525.29999998609,663272.0499999978],["201001",367141,105352.01199999148,531952.9020000178],["201002",366317,81499.0959999923,489399.58600001415],["201003",499030,182832.18100002385,635996.4810000026],["201004",345590,114226.56199999303,560635.0220000078],["201005",369726,99087.9099999871,559924.5500000105],["201006",376237,145131.41000000422,571459.9100000149],["201007",319573,105398.76999999318,562785.900000009],["201008",446926,90059.35999998971,587256.4599999989],["201009",474112,142728.65099999652,781033.3009999989],["201010",587157,212008.83000007854,964989.7799999118],["201011",638690,191337.30200005963,1134879.281999888],["201012",442816,133053.04999998535,859227.3699999922],["201101",269379,73202.31999999017,475074.38000001636],["201102",262833,67529.42999999116,436546.1500000147],["201103",344012,96183.23999998631,579964.6100000151],["201104",278585,91117.72099998788,426047.8510000125],["201105",367852,125537.65999997953,648251.080000003],["201106",356922,129301.44999998451,608013.1600000106],["201107",363418,92754.52099998882,574238.481000012],["201108",386612,88126.74999999513,616368.0000000079],["201109",537496,126029.42199998388,931440.3719999959],["201110",569666,186583.00000001857,974603.5899999909],["201111",669915,195298.52000003058,1132407.7399999578],["201112",203837,50116.73999999839,342524.3800000034]],"arguments":{},"addedWidgets":{},"removedWidgets":[],"schema":[{"name":"YYYYMM","type":"\"string\"","metadata":"{}"},{"name":"Quantity","type":"\"long\"","metadata":"{}"},{"name":"Price","type":"\"double\"","metadata":"{}"},{"name":"Amount","type":"\"double\"","metadata":"{}"}],"overflow":false,"aggData":[],"aggSchema":[],"aggOverflow":false,"aggSeriesLimitReached":false,"aggError":"","aggType":"","plotOptions":null,"isJsonSchema":true,"dbfsResultPath":null,"datasetInfos":[{"name":"sales_df","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"YYYYMM","nullable":true,"type":"string"},{"metadata":{},"name":"Quantity","nullable":true,"type":"long"},{"metadata":{},"name":"Price","nullable":true,"type":"double"},{"metadata":{},"name":"Amount","nullable":true,"type":"double"}],"type":"struct"},"tableIdentifier":null}],"columnCustomDisplayInfos":{},"metadata":{}},"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":1647364529580,"submitTime":1647364529574,"finishTime":1647364533197,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"605","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["table",25]],"nuid":"25d68477-1fe0-4e49-a205-472cc14ec331"},{"version":"CommandV1","origId":1427167053524200,"guid":"3e869ff4-8049-48b1-9458-5565eda4f112","subtype":"command","commandType":"auto","position":3.71337890625,"command":"# Create a dataframe containing date of first purchase for each customer\nfirst_purchases_df = (new_old_users_df\n                      .groupBy(\"CustomerID\").agg(min(\"YYYYMM\"))\n                      .withColumnRenamed(\"min(YYYYMM)\",\"FirstPurchase\")\n                      .orderBy(\"CustomerID\")\n                     )\n\n# Display the resulting dataframe\ndisplay(first_purchases_df.limit(10))","commandVersion":76,"state":"finished","results":{"type":"table","data":[[12346.0,"200912"],[12347.0,"201010"],[12348.0,"201009"],[12349.0,"200912"],[12350.0,"201102"],[12351.0,"201011"],[12352.0,"201011"],[12353.0,"201010"],[12354.0,"201104"],[12355.0,"201005"]],"arguments":{},"addedWidgets":{},"removedWidgets":[],"schema":[{"name":"CustomerID","type":"\"double\"","metadata":"{}"},{"name":"FirstPurchase","type":"\"string\"","metadata":"{}"}],"overflow":false,"aggData":[],"aggSchema":[],"aggOverflow":false,"aggSeriesLimitReached":false,"aggError":"","aggType":"","plotOptions":null,"isJsonSchema":true,"dbfsResultPath":null,"datasetInfos":[{"name":"first_purchases_df","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"CustomerID","nullable":true,"type":"double"},{"metadata":{},"name":"FirstPurchase","nullable":true,"type":"string"}],"type":"struct"},"tableIdentifier":null}],"columnCustomDisplayInfos":{},"metadata":{}},"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":1647364115300,"submitTime":1647364055210,"finishTime":1647364119331,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"329","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["table",10]],"nuid":"147376a7-3f8e-48f2-a04f-f61c610e5a02"},{"version":"CommandV1","origId":1427167053524201,"guid":"a6944890-f204-4192-a478-49047b4c3fc5","subtype":"command","commandType":"auto","position":3.714111328125,"command":"# Join new_old_users and first_purchases dataframes\nnew_old_users_df = new_old_users_df.join(first_purchases_df, \"CustomerID\", \"inner\")\n\n# Display the resulting dataframe\ndisplay(new_old_users_df.limit(10))","commandVersion":48,"state":"finished","results":{"type":"table","data":[[12467.0,"201010","201010"],[12467.0,"201010","201010"],[12467.0,"201010","201010"],[12467.0,"201010","201010"],[12467.0,"201010","201010"],[12467.0,"201010","201010"],[12467.0,"201010","201010"],[12467.0,"201010","201010"],[12467.0,"201010","201010"],[12467.0,"201011","201010"]],"arguments":{},"addedWidgets":{},"removedWidgets":[],"schema":[{"name":"CustomerID","type":"\"double\"","metadata":"{}"},{"name":"YYYYMM","type":"\"string\"","metadata":"{}"},{"name":"FirstPurchase","type":"\"string\"","metadata":"{}"}],"overflow":false,"aggData":[],"aggSchema":[],"aggOverflow":false,"aggSeriesLimitReached":false,"aggError":"","aggType":"","plotOptions":null,"isJsonSchema":true,"dbfsResultPath":null,"datasetInfos":[{"name":"new_old_users_df","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"CustomerID","nullable":true,"type":"double"},{"metadata":{},"name":"YYYYMM","nullable":true,"type":"string"},{"metadata":{},"name":"FirstPurchase","nullable":true,"type":"string"}],"type":"struct"},"tableIdentifier":null}],"columnCustomDisplayInfos":{},"metadata":{}},"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":1647364119341,"submitTime":1647364055220,"finishTime":1647364127652,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"409","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["table",10]],"nuid":"9d07ad15-a062-4d28-8a30-35792bb0a34f"},{"version":"CommandV1","origId":1427167053524202,"guid":"4dff784a-e2f1-419e-a8e1-a40524ba6dee","subtype":"command","commandType":"auto","position":3.7144775390625,"command":"# Create a dataframe containing the number of new users per month\nnew_users_df = (new_old_users_df\n                .filter(col(\"FirstPurchase\") == col(\"YYYYMM\"))\n                .groupBy(\"YYYYMM\").agg(expr(\"COUNT(DISTINCT CustomerID)\").alias(\"NewCustomers\"))\n                .orderBy(\"YYYYMM\")\n               )\n\n# Display the resulting dataframe\ndisplay(new_users_df)","commandVersion":55,"state":"finished","results":{"type":"table","data":[["200912",1045],["201001",394],["201002",363],["201003",436],["201004",291],["201005",254],["201006",269],["201007",183],["201008",158],["201009",242],["201010",379],["201011",322],["201012",77],["201101",71],["201102",123],["201103",178],["201104",105],["201105",108],["201106",108],["201107",102],["201108",106],["201109",187],["201110",221],["201111",192],["201112",28]],"arguments":{},"addedWidgets":{},"removedWidgets":[],"schema":[{"name":"YYYYMM","type":"\"string\"","metadata":"{}"},{"name":"NewCustomers","type":"\"long\"","metadata":"{}"}],"overflow":false,"aggData":[],"aggSchema":[],"aggOverflow":false,"aggSeriesLimitReached":false,"aggError":"","aggType":"","plotOptions":null,"isJsonSchema":true,"dbfsResultPath":null,"datasetInfos":[{"name":"new_users_df","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"YYYYMM","nullable":true,"type":"string"},{"metadata":{},"name":"NewCustomers","nullable":false,"type":"long"}],"type":"struct"},"tableIdentifier":null}],"columnCustomDisplayInfos":{},"metadata":{}},"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":1647364609962,"submitTime":1647364609955,"finishTime":1647364620008,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"305","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["table",25]],"nuid":"ffd1ed32-d6f2-446f-8a35-8a994a2dcff9"},{"version":"CommandV1","origId":1427167053524203,"guid":"eda6f5f1-9dcc-4f0e-8fef-ea570b63cdfa","subtype":"command","commandType":"auto","position":3.71466064453125,"command":"# Create a dataframe containing the number of old users per month\nold_users_df = (new_old_users_df\n                .filter(col(\"FirstPurchase\") < col(\"YYYYMM\"))\n                .groupBy(\"YYYYMM\").agg(expr(\"COUNT(DISTINCT CustomerID)\").alias(\"OldCustomers\"))\n                .union(spark.createDataFrame([(\"200912\", 0)], [\"YYYYMM\", \"OldCustomers\"]))\n                .orderBy(\"YYYYMM\")\n               )\n\n# Display the resulting dataframe\ndisplay(old_users_df)","commandVersion":50,"state":"finished","results":{"type":"table","data":[["200912",0],["201001",392],["201002",444],["201003",675],["201004",707],["201005",808],["201006",826],["201007",805],["201008",806],["201009",960],["201010",1198],["201011",1361],["201012",871],["201101",712],["201102",675],["201103",842],["201104",794],["201105",971],["201106",943],["201107",891],["201108",874],["201109",1115],["201110",1204],["201111",1519],["201112",658]],"arguments":{},"addedWidgets":{},"removedWidgets":[],"schema":[{"name":"YYYYMM","type":"\"string\"","metadata":"{}"},{"name":"OldCustomers","type":"\"long\"","metadata":"{}"}],"overflow":false,"aggData":[],"aggSchema":[],"aggOverflow":false,"aggSeriesLimitReached":false,"aggError":"","aggType":"","plotOptions":null,"isJsonSchema":true,"dbfsResultPath":null,"datasetInfos":[{"name":"old_users_df","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"YYYYMM","nullable":true,"type":"string"},{"metadata":{},"name":"OldCustomers","nullable":true,"type":"long"}],"type":"struct"},"tableIdentifier":null}],"columnCustomDisplayInfos":{},"metadata":{}},"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":1647364623719,"submitTime":1647364623714,"finishTime":1647364634153,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"299","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["table",25]],"nuid":"66ba744f-72ce-4ccc-a0fc-6b9e9f731de0"},{"version":"CommandV1","origId":1427167053524204,"guid":"a4b2f002-ce04-4df9-ad13-408e835c930d","subtype":"command","commandType":"auto","position":3.714752197265625,"command":"# Join new_users_df and old_users_df dataframes\nnew_users_df = new_users_df.withColumnRenamed(\"YYYYMM\", \"YYYYMM\")\nold_users_df = old_users_df.withColumnRenamed(\"YYYYMM\", \"YYYYMM\")\ncombined_users_df = (new_users_df\n                     .join(old_users_df, \"YYYYMM\", \"inner\")\n                     .orderBy(\"YYYYMM\")\n                    )\n\n# Display the resulting dataframe\ndisplay(combined_users_df)","commandVersion":101,"state":"finished","results":{"type":"table","data":[["200912",1045,0],["201001",394,392],["201002",363,444],["201003",436,675],["201004",291,707],["201005",254,808],["201006",269,826],["201007",183,805],["201008",158,806],["201009",242,960],["201010",379,1198],["201011",322,1361],["201012",77,871],["201101",71,712],["201102",123,675],["201103",178,842],["201104",105,794],["201105",108,971],["201106",108,943],["201107",102,891],["201108",106,874],["201109",187,1115],["201110",221,1204],["201111",192,1519],["201112",28,658]],"arguments":{},"addedWidgets":{},"removedWidgets":[],"schema":[{"name":"YYYYMM","type":"\"string\"","metadata":"{}"},{"name":"NewCustomers","type":"\"long\"","metadata":"{}"},{"name":"OldCustomers","type":"\"long\"","metadata":"{}"}],"overflow":false,"aggData":[],"aggSchema":[],"aggOverflow":false,"aggSeriesLimitReached":false,"aggError":"","aggType":"","plotOptions":null,"isJsonSchema":true,"dbfsResultPath":null,"datasetInfos":[{"name":"new_users_df","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"YYYYMM","nullable":true,"type":"string"},{"metadata":{},"name":"NewCustomers","nullable":false,"type":"long"}],"type":"struct"},"tableIdentifier":null},{"name":"old_users_df","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"YYYYMM","nullable":true,"type":"string"},{"metadata":{},"name":"OldCustomers","nullable":true,"type":"long"}],"type":"struct"},"tableIdentifier":null},{"name":"combined_users_df","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"YYYYMM","nullable":true,"type":"string"},{"metadata":{},"name":"NewCustomers","nullable":false,"type":"long"},{"metadata":{},"name":"OldCustomers","nullable":true,"type":"long"}],"type":"struct"},"tableIdentifier":null}],"columnCustomDisplayInfos":{},"metadata":{}},"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":1647364653878,"submitTime":1647364653873,"finishTime":1647364669915,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"433","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["table",25]],"nuid":"1b2b2de3-67f8-4944-ad3d-034681a903ef"},{"version":"CommandV1","origId":1726690356538431,"guid":"34e3af11-5c7f-48fb-962c-f6f823cd7d31","subtype":"command","commandType":"auto","position":3.732421875,"command":"# Create a dataframe containing the most recent purchase date for each customer\nlast_purchases_df = (users_df\n                     .select(\"CustomerID\", \"YYYYMM\")\n                     .groupBy(\"CustomerID\").agg(max(\"YYYYMM\").alias(\"LastPurchase\"))\n                    )\n\n# Display the resulting dataframe\ndisplay(last_purchases_df.limit(10))","commandVersion":82,"state":"finished","results":{"type":"table","data":[[12356.0,"201111"],[12351.0,"201011"],[12354.0,"201104"],[12359.0,"201110"],[12360.0,"201110"],[12358.0,"201112"],[12348.0,"201109"],[12361.0,"201005"],[12349.0,"201111"],[12350.0,"201102"]],"arguments":{},"addedWidgets":{},"removedWidgets":[],"schema":[{"name":"CustomerID","type":"\"double\"","metadata":"{}"},{"name":"LastPurchase","type":"\"string\"","metadata":"{}"}],"overflow":false,"aggData":[],"aggSchema":[],"aggOverflow":false,"aggSeriesLimitReached":false,"aggError":"","aggType":"","plotOptions":null,"isJsonSchema":true,"dbfsResultPath":null,"datasetInfos":[{"name":"last_purchases_df","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"CustomerID","nullable":true,"type":"double"},{"metadata":{},"name":"LastPurchase","nullable":true,"type":"string"}],"type":"struct"},"tableIdentifier":null}],"columnCustomDisplayInfos":{},"metadata":{}},"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":1647364166466,"submitTime":1647364055330,"finishTime":1647364170273,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"309","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["table",10]],"nuid":"8fc47cbc-5330-410e-9f3e-9c163f4a7dd7"},{"version":"CommandV1","origId":1726690356538432,"guid":"7987802a-990b-4ee0-9f3d-4a13bf442d9d","subtype":"command","commandType":"auto","position":3.7353515625,"command":"# Update users_df dataframe by joining with last_purchases_df\nusers_df = (users_df\n            .join(last_purchases_df, \"CustomerID\", \"inner\")\n            .filter(users_df[\"Quantity\"] > 0)\n            .filter(users_df[\"Price\"] > 0)\n            .withColumn(\"Amount\", users_df[\"Quantity\"] * users_df[\"Price\"])\n            .drop(\"Quantity\", \"Price\")\n            .orderBy(\"CustomerID\")\n           )\n\n# Display the resulting dataframe\ndisplay(users_df.limit(10))","commandVersion":81,"state":"finished","results":{"type":"table","data":[[12346.0,"495295","2010-01-22T13:30:00.000+0000","201001","201101",22.5],[12346.0,"492722","2009-12-18T10:55:00.000+0000","200912","201101",1.0],[12346.0,"494450","2010-01-14T13:50:00.000+0000","201001","201101",22.5],[12346.0,"491744","2009-12-14T11:02:00.000+0000","200912","201101",22.5],[12346.0,"492718","2009-12-18T10:47:00.000+0000","200912","201101",22.5],[12346.0,"493410","2010-01-04T09:24:00.000+0000","201001","201101",22.5],[12346.0,"493412","2010-01-04T09:53:00.000+0000","201001","201101",22.5],[12346.0,"491725","2009-12-14T08:34:00.000+0000","200912","201101",45.0],[12346.0,"491742","2009-12-14T11:00:00.000+0000","200912","201101",22.5],[12346.0,"499763","2010-03-02T13:08:00.000+0000","201003","201101",3.25]],"arguments":{},"addedWidgets":{},"removedWidgets":[],"schema":[{"name":"CustomerID","type":"\"double\"","metadata":"{}"},{"name":"Invoice","type":"\"string\"","metadata":"{}"},{"name":"InvoiceDate","type":"\"timestamp\"","metadata":"{}"},{"name":"YYYYMM","type":"\"string\"","metadata":"{}"},{"name":"LastPurchase","type":"\"string\"","metadata":"{}"},{"name":"Amount","type":"\"double\"","metadata":"{}"}],"overflow":false,"aggData":[],"aggSchema":[],"aggOverflow":false,"aggSeriesLimitReached":false,"aggError":"","aggType":"","plotOptions":null,"isJsonSchema":true,"dbfsResultPath":null,"datasetInfos":[{"name":"users_df","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"CustomerID","nullable":true,"type":"double"},{"metadata":{},"name":"Invoice","nullable":true,"type":"string"},{"metadata":{},"name":"InvoiceDate","nullable":true,"type":"timestamp"},{"metadata":{},"name":"YYYYMM","nullable":true,"type":"string"},{"metadata":{},"name":"LastPurchase","nullable":true,"type":"string"},{"metadata":{},"name":"Amount","nullable":true,"type":"double"}],"type":"struct"},"tableIdentifier":null}],"columnCustomDisplayInfos":{},"metadata":{}},"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":1647364170279,"submitTime":1647364055336,"finishTime":1647364177394,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"887","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["table",10]],"nuid":"f6e54974-488d-42e5-9f59-08c642d4b43b"},{"version":"CommandV1","origId":1726690356538433,"guid":"0cc395de-3f6b-42d4-b26e-cd0ab98dade1","subtype":"command","commandType":"auto","position":3.73681640625,"command":"# Create dataframe containing the monetary value for each customer\nmonetary_df = (users_df\n               .select(\"CustomerID\", \"Amount\")\n               .groupBy(\"CustomerID\").agg(sum(\"Amount\").alias(\"Monetary\"))\n               .orderBy(\"CustomerID\")\n              )\n\n# Display the resulting dataframe\ndisplay(monetary_df.limit(10))","commandVersion":86,"state":"finished","results":{"type":"table","data":[[12346.0,77556.46],[12347.0,5633.3199999999915],[12348.0,2019.4],[12349.0,4428.690000000002],[12350.0,334.40000000000003],[12351.0,300.93],[12352.0,2849.8400000000015],[12353.0,406.75999999999993],[12354.0,1079.4],[12355.0,947.61]],"arguments":{},"addedWidgets":{},"removedWidgets":[],"schema":[{"name":"CustomerID","type":"\"double\"","metadata":"{}"},{"name":"Monetary","type":"\"double\"","metadata":"{}"}],"overflow":false,"aggData":[],"aggSchema":[],"aggOverflow":false,"aggSeriesLimitReached":false,"aggError":"","aggType":"","plotOptions":null,"isJsonSchema":true,"dbfsResultPath":null,"datasetInfos":[{"name":"monetary_df","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"CustomerID","nullable":true,"type":"double"},{"metadata":{},"name":"Monetary","nullable":true,"type":"double"}],"type":"struct"},"tableIdentifier":null}],"columnCustomDisplayInfos":{},"metadata":{}},"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":1647364177399,"submitTime":1647364055346,"finishTime":1647364185130,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"335","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["table",10]],"nuid":"04e2ff9f-55a8-40c5-a079-d8aa9e33c5de"},{"version":"CommandV1","origId":1726690356538434,"guid":"c845e777-0ca7-4674-a40d-24db360dbfc9","subtype":"command","commandType":"auto","position":3.737548828125,"command":"# Create dataframe containing the frequency value for each customer\nfrequency_df = (users_df\n                .select(\"CustomerID\", \"Invoice\")\n                .groupBy(\"CustomerID\").agg(expr(\"COUNT(DISTINCT Invoice)\").alias(\"Frequency\"))\n                .orderBy(\"CustomerID\")\n               )\n\n# Display the resulting dataframe\ndisplay(frequency_df.limit(10))","commandVersion":167,"state":"finished","results":{"type":"table","data":[[12346.0,12],[12347.0,8],[12348.0,5],[12349.0,4],[12350.0,1],[12351.0,1],[12352.0,10],[12353.0,2],[12354.0,1],[12355.0,2]],"arguments":{},"addedWidgets":{},"removedWidgets":[],"schema":[{"name":"CustomerID","type":"\"double\"","metadata":"{}"},{"name":"Frequency","type":"\"long\"","metadata":"{}"}],"overflow":false,"aggData":[],"aggSchema":[],"aggOverflow":false,"aggSeriesLimitReached":false,"aggError":"","aggType":"","plotOptions":null,"isJsonSchema":true,"dbfsResultPath":null,"datasetInfos":[{"name":"frequency_df","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"CustomerID","nullable":true,"type":"double"},{"metadata":{},"name":"Frequency","nullable":false,"type":"long"}],"type":"struct"},"tableIdentifier":null}],"columnCustomDisplayInfos":{},"metadata":{}},"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":1647364185135,"submitTime":1647364055354,"finishTime":1647364192769,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"516","height":"196","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["table",10]],"nuid":"13e33339-e34d-4d3f-9cfe-e28caa0de625"},{"version":"CommandV1","origId":1726690356538435,"guid":"e263c058-7862-4e3e-82e3-3d56c237bfae","subtype":"command","commandType":"auto","position":3.7379150390625,"command":"# Create dataframe containing the recency value for each customer\nrecency_df = (users_df\n              .select(\"CustomerID\", \"InvoiceDate\")\n              .withColumn(\"Recency\", datediff(current_date(), users_df[\"InvoiceDate\"]))\n              .groupBy(\"CustomerID\").agg(min(\"Recency\").alias(\"Recency\"))\n              .orderBy(\"CustomerID\")\n             )\n\n# Display the resulting dataframe\ndisplay(recency_df.limit(10))","commandVersion":213,"state":"finished","results":{"type":"table","data":[[12346.0,4074],[12347.0,3751],[12348.0,3824],[12349.0,3767],[12350.0,4059],[12351.0,4124],[12352.0,3785],[12353.0,3953],[12354.0,3981],[12355.0,3963]],"arguments":{},"addedWidgets":{},"removedWidgets":[],"schema":[{"name":"CustomerID","type":"\"double\"","metadata":"{}"},{"name":"Recency","type":"\"integer\"","metadata":"{}"}],"overflow":false,"aggData":[],"aggSchema":[],"aggOverflow":false,"aggSeriesLimitReached":false,"aggError":"","aggType":"","plotOptions":null,"isJsonSchema":true,"dbfsResultPath":null,"datasetInfos":[{"name":"recency_df","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"CustomerID","nullable":true,"type":"double"},{"metadata":{},"name":"Recency","nullable":true,"type":"integer"}],"type":"struct"},"tableIdentifier":null}],"columnCustomDisplayInfos":{},"metadata":{}},"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":1647364192774,"submitTime":1647364055360,"finishTime":1647364200272,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"309","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["table",10]],"nuid":"b38eb517-e3bc-4632-ab23-afded23cd803"},{"version":"CommandV1","origId":1726690356538436,"guid":"91a480a5-3ba5-47f4-b81c-836b5bf00c62","subtype":"command","commandType":"auto","position":3.73809814453125,"command":"# Join the recency_df, frequency_df, and monetary_df dataframes\nrfm_overview_df = (recency_df\n                   .join(frequency_df, \"CustomerID\", \"inner\")\n                   .join(monetary_df, \"CustomerID\", \"inner\")\n                   .orderBy(\"CustomerID\")\n                  )\n\n# Display the resulting dataframe\ndisplay(rfm_overview_df.limit(10))","commandVersion":65,"state":"finished","results":{"type":"table","data":[[12346.0,4074,12,77556.46],[12347.0,3751,8,5633.3199999999915],[12348.0,3824,5,2019.4],[12349.0,3767,4,4428.690000000002],[12350.0,4059,1,334.40000000000003],[12351.0,4124,1,300.93],[12352.0,3785,10,2849.8400000000015],[12353.0,3953,2,406.75999999999993],[12354.0,3981,1,1079.4],[12355.0,3963,2,947.61]],"arguments":{},"addedWidgets":{},"removedWidgets":[],"schema":[{"name":"CustomerID","type":"\"double\"","metadata":"{}"},{"name":"Recency","type":"\"integer\"","metadata":"{}"},{"name":"Frequency","type":"\"long\"","metadata":"{}"},{"name":"Monetary","type":"\"double\"","metadata":"{}"}],"overflow":false,"aggData":[],"aggSchema":[],"aggOverflow":false,"aggSeriesLimitReached":false,"aggError":"","aggType":"","plotOptions":null,"isJsonSchema":true,"dbfsResultPath":null,"datasetInfos":[{"name":"rfm_overview_df","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"CustomerID","nullable":true,"type":"double"},{"metadata":{},"name":"Recency","nullable":true,"type":"integer"},{"metadata":{},"name":"Frequency","nullable":false,"type":"long"},{"metadata":{},"name":"Monetary","nullable":true,"type":"double"}],"type":"struct"},"tableIdentifier":null}],"columnCustomDisplayInfos":{},"metadata":{}},"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":1647364200279,"submitTime":1647364055366,"finishTime":1647364220190,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"540","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["table",10]],"nuid":"b9d42ce5-d8eb-4518-8f3c-5c124806f9a6"},{"version":"CommandV1","origId":1726690356538437,"guid":"d40fbe03-4f71-45fe-b7f1-63351960d18b","subtype":"command","commandType":"auto","position":3.738189697265625,"command":"# Find frequency scores\nrfm_table = (rfm_overview_df\n             .select(\"CustomerID\", \"Recency\", \"Frequency\", \"Monetary\", ntile(5).over(Window.partitionBy().orderBy(rfm_overview_df.Recency)).alias(\"RecencyScore\"), ntile(5).over(Window.partitionBy().orderBy(rfm_overview_df.Frequency)).alias(\"FrequencyScore\"), ntile(5).over(Window.partitionBy().orderBy(rfm_overview_df.Monetary)).alias(\"MonetaryScore\"))\n             .orderBy(\"CustomerID\")\n            )\n\n# Display the resulting dataframe\ndisplay(rfm_table.limit(10))","commandVersion":298,"state":"finished","results":{"type":"table","data":[[12346.0,4074,12,77556.46,4,5,5],[12347.0,3751,8,5633.3199999999915,1,4,5],[12348.0,3824,5,2019.4,3,4,4],[12349.0,3767,4,4428.690000000002,1,3,5],[12350.0,4059,1,334.40000000000003,4,1,2],[12351.0,4124,1,300.93,4,1,2],[12352.0,3785,10,2849.8400000000015,2,5,4],[12353.0,3953,2,406.75999999999993,4,2,2],[12354.0,3981,1,1079.4,4,1,3],[12355.0,3963,2,947.61,4,2,3]],"arguments":{},"addedWidgets":{},"removedWidgets":[],"schema":[{"name":"CustomerID","type":"\"double\"","metadata":"{}"},{"name":"Recency","type":"\"integer\"","metadata":"{}"},{"name":"Frequency","type":"\"long\"","metadata":"{}"},{"name":"Monetary","type":"\"double\"","metadata":"{}"},{"name":"RecencyScore","type":"\"integer\"","metadata":"{}"},{"name":"FrequencyScore","type":"\"integer\"","metadata":"{}"},{"name":"MonetaryScore","type":"\"integer\"","metadata":"{}"}],"overflow":false,"aggData":[],"aggSchema":[],"aggOverflow":false,"aggSeriesLimitReached":false,"aggError":"","aggType":"","plotOptions":null,"isJsonSchema":true,"dbfsResultPath":null,"datasetInfos":[{"name":"rfm_table","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"CustomerID","nullable":true,"type":"double"},{"metadata":{},"name":"Recency","nullable":true,"type":"integer"},{"metadata":{},"name":"Frequency","nullable":false,"type":"long"},{"metadata":{},"name":"Monetary","nullable":true,"type":"double"},{"metadata":{},"name":"RecencyScore","nullable":true,"type":"integer"},{"metadata":{},"name":"FrequencyScore","nullable":true,"type":"integer"},{"metadata":{},"name":"MonetaryScore","nullable":true,"type":"integer"}],"type":"struct"},"tableIdentifier":null}],"columnCustomDisplayInfos":{},"metadata":{}},"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":1647364220197,"submitTime":1647364055373,"finishTime":1647364241172,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"987","height":"283","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["table",10]],"nuid":"574a0bec-83cf-42aa-b18d-4d933055df1c"},{"version":"CommandV1","origId":1726690356538438,"guid":"c327a734-9d1e-4e26-bb92-ab4054a49315","subtype":"command","commandType":"auto","position":3.7382354736328125,"command":"# Import chain\nfrom itertools import chain\n\n# Reverse 1-5 scale to 5-1 scale in RecencyScore\nrecency_dict = { 1:5, 2:4, 3:3, 4:2, 5:1 }\nmapping = create_map([lit(x) for x in chain(*recency_dict.items())])\nrfm_table_scores = rfm_table.select(\"CustomerID\", \"Recency\", \"Frequency\", \"Monetary\", mapping[rfm_table[\"RecencyScore\"]].alias(\"RecencyScore\"), \"FrequencyScore\", \"MonetaryScore\")\n\n# Add RFMScore column\nrfm_table_scores = rfm_table_scores.withColumn(\"RFMScore\", regexp_replace(concat(rfm_table_scores.RecencyScore.cast(\"String\"), rfm_table_scores.FrequencyScore.cast(\"String\"), rfm_table_scores.MonetaryScore.cast(\"String\")), \".0\", \"\").cast(\"Integer\"))\n\n# Display the resulting dataframe\ndisplay(rfm_table_scores.limit(10))","commandVersion":472,"state":"finished","results":{"type":"table","data":[[12346.0,4074,12,77556.46,2,5,5,255],[12347.0,3751,8,5633.3199999999915,5,4,5,545],[12348.0,3824,5,2019.4,3,4,4,344],[12349.0,3767,4,4428.690000000002,5,3,5,535],[12350.0,4059,1,334.40000000000003,2,1,2,212],[12351.0,4124,1,300.93,2,1,2,212],[12352.0,3785,10,2849.8400000000015,4,5,4,454],[12353.0,3953,2,406.75999999999993,2,2,2,222],[12354.0,3981,1,1079.4,2,1,3,213],[12355.0,3963,2,947.61,2,2,3,223]],"arguments":{},"addedWidgets":{},"removedWidgets":[],"schema":[{"name":"CustomerID","type":"\"double\"","metadata":"{}"},{"name":"Recency","type":"\"integer\"","metadata":"{}"},{"name":"Frequency","type":"\"long\"","metadata":"{}"},{"name":"Monetary","type":"\"double\"","metadata":"{}"},{"name":"RecencyScore","type":"\"integer\"","metadata":"{}"},{"name":"FrequencyScore","type":"\"integer\"","metadata":"{}"},{"name":"MonetaryScore","type":"\"integer\"","metadata":"{}"},{"name":"RFMScore","type":"\"integer\"","metadata":"{}"}],"overflow":false,"aggData":[],"aggSchema":[],"aggOverflow":false,"aggSeriesLimitReached":false,"aggError":"","aggType":"","plotOptions":null,"isJsonSchema":true,"dbfsResultPath":null,"datasetInfos":[{"name":"rfm_table_scores","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"CustomerID","nullable":true,"type":"double"},{"metadata":{},"name":"Recency","nullable":true,"type":"integer"},{"metadata":{},"name":"Frequency","nullable":false,"type":"long"},{"metadata":{},"name":"Monetary","nullable":true,"type":"double"},{"metadata":{},"name":"RecencyScore","nullable":true,"type":"integer"},{"metadata":{},"name":"FrequencyScore","nullable":true,"type":"integer"},{"metadata":{},"name":"MonetaryScore","nullable":true,"type":"integer"},{"metadata":{},"name":"RFMScore","nullable":true,"type":"integer"}],"type":"struct"},"tableIdentifier":null}],"columnCustomDisplayInfos":{},"metadata":{}},"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":1647364241178,"submitTime":1647364055380,"finishTime":1647364261699,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"1050","height":"187","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["table",10]],"nuid":"d7918a13-05f9-4143-a677-8690bea71453"},{"version":"CommandV1","origId":2264954899223659,"guid":"83c07537-8318-4b8c-a87b-4520cec2b31e","subtype":"command","commandType":"auto","position":3.7382755279541016,"command":"# Create a dataframe containing mean and count of each segment\nrfm_table_segments_agg = (rfm_table_segments\n                          .select(\"Segment\", \"Recency\", \"Frequency\", \"Monetary\")\n                          .groupby(\"Segment\").agg(mean(\"Recency\").alias(\"MeanRecency\"),\n                                                  count(\"Recency\").alias(\"CountRecency\"),\n                                                  mean(\"Frequency\").alias(\"MeanFrequency\"),\n                                                  count(\"Frequency\").alias(\"CountFrequency\"),\n                                                  mean(\"Monetary\").alias(\"MeanMonetary\"),\n                                                  count(\"Monetary\").alias(\"CountMonetary\")\n                                                 )\n                          .orderBy(\"Segment\")\n                         )\n\n# Display the resulting dataframe\ndisplay(rfm_table_segments_agg)","commandVersion":107,"state":"finished","results":{"type":"table","data":[["About to Sleep",3854.9766233766236,385,1.3558441558441559,385,531.6770207792208,385],["At Risk",4121.159362549801,753,3.909694555112882,753,1382.2359760956174,753],["Can't Lose",4079.8028169014083,71,15.929577464788732,71,8355.677633802808,71],["Champions",3756.8576642335765,822,19.482968369829685,822,11036.223132603403,822],["Hibernating",4207.329619921363,1526,1.254259501965924,1526,438.52393315858416,1526],["Loyal Customer",3814.865531914894,1175,9.862127659574469,1175,4205.459817021268,1175],["Need Attention",3861.674157303371,267,3.157303370786517,267,1283.9465917602997,267],["New Customers",3759.3035714285716,56,1.0,56,356.2578571428571,56],["Potential Loyalists",3774.297335203366,713,2.5890603085554,713,1155.427280504909,713],["Promising",3787.2818181818184,110,1.0,110,324.49699999999996,110]],"arguments":{},"addedWidgets":{},"removedWidgets":[],"schema":[{"name":"Segment","type":"\"string\"","metadata":"{}"},{"name":"MeanRecency","type":"\"double\"","metadata":"{}"},{"name":"CountRecency","type":"\"long\"","metadata":"{}"},{"name":"MeanFrequency","type":"\"double\"","metadata":"{}"},{"name":"CountFrequency","type":"\"long\"","metadata":"{}"},{"name":"MeanMonetary","type":"\"double\"","metadata":"{}"},{"name":"CountMonetary","type":"\"long\"","metadata":"{}"}],"overflow":false,"aggData":[],"aggSchema":[],"aggOverflow":false,"aggSeriesLimitReached":false,"aggError":"","aggType":"","plotOptions":null,"isJsonSchema":true,"dbfsResultPath":null,"datasetInfos":[{"name":"rfm_table_segments_agg","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"Segment","nullable":true,"type":"string"},{"metadata":{},"name":"MeanRecency","nullable":true,"type":"double"},{"metadata":{},"name":"CountRecency","nullable":false,"type":"long"},{"metadata":{},"name":"MeanFrequency","nullable":true,"type":"double"},{"metadata":{},"name":"CountFrequency","nullable":false,"type":"long"},{"metadata":{},"name":"MeanMonetary","nullable":true,"type":"double"},{"metadata":{},"name":"CountMonetary","nullable":false,"type":"long"}],"type":"struct"},"tableIdentifier":null}],"columnCustomDisplayInfos":{},"metadata":{}},"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":1647364283546,"submitTime":1647364055399,"finishTime":1647364304554,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"1081","height":"324","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["table",10]],"nuid":"05b8e07a-9cdc-448a-b93d-d438e507a4a6"},{"version":"CommandV1","origId":2264954899223660,"guid":"69b55bff-4d37-4ce5-9df4-fd00522847f5","subtype":"command","commandType":"auto","position":3.738278388977051,"command":"# Create a dataframe containing segment and mean recency\nrfm_table_segments_recency = (rfm_table_segments_agg\n                              .select(\"Segment\", \"MeanRecency\")\n                              .orderBy(\"MeanRecency\", ascending=[1])\n                             )\n\n# Display the resulting dataframe\ndisplay(rfm_table_segments_recency)","commandVersion":65,"state":"finished","results":{"type":"table","data":[["Champions",3756.8576642335765],["New Customers",3759.3035714285716],["Potential Loyalists",3774.297335203366],["Promising",3787.2818181818184],["Loyal Customer",3814.865531914894],["About to Sleep",3854.9766233766236],["Need Attention",3861.674157303371],["Can't Lose",4079.8028169014083],["At Risk",4121.159362549801],["Hibernating",4207.329619921363]],"arguments":{},"addedWidgets":{},"removedWidgets":[],"schema":[{"name":"Segment","type":"\"string\"","metadata":"{}"},{"name":"MeanRecency","type":"\"double\"","metadata":"{}"}],"overflow":false,"aggData":[],"aggSchema":[],"aggOverflow":false,"aggSeriesLimitReached":false,"aggError":"","aggType":"","plotOptions":null,"isJsonSchema":true,"dbfsResultPath":null,"datasetInfos":[{"name":"rfm_table_segments_recency","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"Segment","nullable":true,"type":"string"},{"metadata":{},"name":"MeanRecency","nullable":true,"type":"double"}],"type":"struct"},"tableIdentifier":null}],"columnCustomDisplayInfos":{},"metadata":{}},"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":1647364304561,"submitTime":1647364055407,"finishTime":1647364325912,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"365","height":"336","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["table",10]],"nuid":"ca068ce0-5855-40d2-bb89-f60b0e48d229"},{"version":"CommandV1","origId":3357811566613597,"guid":"e4291687-c665-4c1a-872e-78346e102d09","subtype":"command","commandType":"auto","position":3.7382583618164062,"command":"# Create a map object to label segments by RFM score\nseg_map = {\n    '11': 'Hibernating',\n    '12': 'Hibernating',\n    '21': 'Hibernating',\n    '22': 'Hibernating',\n    '13': 'At Risk',\n    '14': 'At Risk',\n    '23': 'At Risk',\n    '24': 'At Risk',\n    '15': 'Can\\'t Lose',\n    '25': 'Can\\'t Lose',\n    '31': 'About to Sleep',\n    '32': 'About to Sleep',\n    '33': 'Need Attention',\n    '34': 'Loyal Customer',\n    '44': 'Loyal Customer',\n    '35': 'Loyal Customer',\n    '45': 'Loyal Customer',\n    '41': 'Promising',\n    '51': 'New Customers',\n    '42': 'Potential Loyalists',\n    '43': 'Potential Loyalists',\n    '52': 'Potential Loyalists',\n    '53': 'Potential Loyalists',\n    '54': 'Champions',\n    '55': 'Champions'\n}\n\n# Create a mapping expression\nmapping_expr = create_map([lit(x) for x in chain(*seg_map.items())])","commandVersion":266,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\"></div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[],"metadata":{}},"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":1647364261706,"submitTime":1647364055387,"finishTime":1647364262005,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["html",27]],"nuid":"1ebb54e4-3257-4151-99bf-7848c6a0265d"},{"version":"CommandV1","origId":3357811566613598,"guid":"f67a58eb-2000-439d-ba64-ab17d1bbbcc8","subtype":"command","commandType":"auto","position":3.738269805908203,"command":"# Add a \"Segment\" column\nrfm_table_segments = rfm_table_scores.withColumn(\"Segment\", regexp_replace(concat(rfm_table_scores.RecencyScore.cast(\"String\"), rfm_table_scores.FrequencyScore.cast(\"String\")), \".0\", \"\").cast(\"String\"))\nrfm_table_segments = rfm_table_segments.withColumn(\"Segment\", mapping_expr.getItem(col(\"Segment\")))\n\n# Display the resulting dataframe\ndisplay(rfm_table_segments.limit(10))","commandVersion":432,"state":"finished","results":{"type":"table","data":[[12346.0,4074,12,77556.46,2,5,5,255,"Can't Lose"],[12347.0,3751,8,5633.3199999999915,5,4,5,545,"Champions"],[12348.0,3824,5,2019.4,3,4,4,344,"Loyal Customer"],[12349.0,3767,4,4428.690000000002,5,3,5,535,"Potential Loyalists"],[12350.0,4059,1,334.40000000000003,2,1,2,212,"Hibernating"],[12351.0,4124,1,300.93,2,1,2,212,"Hibernating"],[12352.0,3785,10,2849.8400000000015,4,5,4,454,"Loyal Customer"],[12353.0,3953,2,406.75999999999993,2,2,2,222,"Hibernating"],[12354.0,3981,1,1079.4,2,1,3,213,"Hibernating"],[12355.0,3963,2,947.61,2,2,3,223,"Hibernating"]],"arguments":{},"addedWidgets":{},"removedWidgets":[],"schema":[{"name":"CustomerID","type":"\"double\"","metadata":"{}"},{"name":"Recency","type":"\"integer\"","metadata":"{}"},{"name":"Frequency","type":"\"long\"","metadata":"{}"},{"name":"Monetary","type":"\"double\"","metadata":"{}"},{"name":"RecencyScore","type":"\"integer\"","metadata":"{}"},{"name":"FrequencyScore","type":"\"integer\"","metadata":"{}"},{"name":"MonetaryScore","type":"\"integer\"","metadata":"{}"},{"name":"RFMScore","type":"\"integer\"","metadata":"{}"},{"name":"Segment","type":"\"string\"","metadata":"{}"}],"overflow":false,"aggData":[],"aggSchema":[],"aggOverflow":false,"aggSeriesLimitReached":false,"aggError":"","aggType":"","plotOptions":null,"isJsonSchema":true,"dbfsResultPath":null,"datasetInfos":[{"name":"rfm_table_segments","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"CustomerID","nullable":true,"type":"double"},{"metadata":{},"name":"Recency","nullable":true,"type":"integer"},{"metadata":{},"name":"Frequency","nullable":false,"type":"long"},{"metadata":{},"name":"Monetary","nullable":true,"type":"double"},{"metadata":{},"name":"RecencyScore","nullable":true,"type":"integer"},{"metadata":{},"name":"FrequencyScore","nullable":true,"type":"integer"},{"metadata":{},"name":"MonetaryScore","nullable":true,"type":"integer"},{"metadata":{},"name":"RFMScore","nullable":true,"type":"integer"},{"metadata":{},"name":"Segment","nullable":true,"type":"string"}],"type":"struct"},"tableIdentifier":null}],"columnCustomDisplayInfos":{},"metadata":{}},"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":1647364262010,"submitTime":1647364055393,"finishTime":1647364283540,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"1185","height":"313","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["table",10]],"nuid":"aef75787-7131-4137-9600-c95e7d0ed2bf"},{"version":"CommandV1","origId":3660845094001473,"guid":"99d9f0ed-a1f0-486b-bac0-85ea7d7e6bf2","subtype":"command","commandType":"auto","position":1.0,"command":"%md\n# Introduction\n\nThis notebook addresses various business problems relating to a dataset containing retail information. The full list of tasks can be found below:\n- Calculate the number of invoices\n- Find the number of placed and cancelled orders by month\n- Calculate the monthly total sales\n- Calculate the monthly sales growth as a percentage\n- Find the number of active users for each month\n- Find the number of new and existing users for each month\n- Perform RFM segmentation","commandVersion":248,"state":"finished","results":null,"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":null,"nuid":"96816ed7-b08a-4ca3-abb9-f99880c3535d"},{"version":"CommandV1","origId":3660845094001474,"guid":"e1b6b90c-0fff-435d-a05d-c67b3990caf3","subtype":"command","commandType":"auto","position":3.0,"command":"# File location and type\nfile_location = \"/FileStore/tables/online_retail_II.csv\"\nfile_type = \"csv\"\n\n# CSV options\ninfer_schema = \"true\"\nfirst_row_is_header = \"true\"\ndelimiter = \",\"\n\n# Import sql functions\nfrom pyspark.sql.functions import *\n\n# Import sql window\nfrom pyspark.sql.window import Window\n\n# The applied options are for CSV files. For other file types, these will be ignored.\ndf = (spark\n      .read.format(file_type)\n      .option(\"inferSchema\", infer_schema)\n      .option(\"header\", first_row_is_header)\n      .option(\"sep\", delimiter)\n      .load(file_location)\n      .na.drop()\n      .withColumnRenamed(\"Customer ID\", \"CustomerID\")\n     )\n\n# Display the resulting dataframe\ndisplay(df.limit(10))","commandVersion":200,"state":"finished","results":{"type":"table","data":[["489434","85048","15CM CHRISTMAS GLASS BALL 20 LIGHTS",12,"2009-12-01T07:45:00.000+0000",6.95,13085.0,"United Kingdom"],["489434","79323P","PINK CHERRY LIGHTS",12,"2009-12-01T07:45:00.000+0000",6.75,13085.0,"United Kingdom"],["489434","79323W"," WHITE CHERRY LIGHTS",12,"2009-12-01T07:45:00.000+0000",6.75,13085.0,"United Kingdom"],["489434","22041","\"RECORD FRAME 7\"\" SINGLE SIZE \"",48,"2009-12-01T07:45:00.000+0000",2.1,13085.0,"United Kingdom"],["489434","21232","STRAWBERRY CERAMIC TRINKET BOX",24,"2009-12-01T07:45:00.000+0000",1.25,13085.0,"United Kingdom"],["489434","22064","PINK DOUGHNUT TRINKET POT ",24,"2009-12-01T07:45:00.000+0000",1.65,13085.0,"United Kingdom"],["489434","21871","SAVE THE PLANET MUG",24,"2009-12-01T07:45:00.000+0000",1.25,13085.0,"United Kingdom"],["489434","21523","FANCY FONT HOME SWEET HOME DOORMAT",10,"2009-12-01T07:45:00.000+0000",5.95,13085.0,"United Kingdom"],["489435","22350","CAT BOWL ",12,"2009-12-01T07:46:00.000+0000",2.55,13085.0,"United Kingdom"],["489435","22349","DOG BOWL , CHASING BALL DESIGN",12,"2009-12-01T07:46:00.000+0000",3.75,13085.0,"United Kingdom"]],"arguments":{},"addedWidgets":{},"removedWidgets":[],"schema":[{"name":"Invoice","type":"\"string\"","metadata":"{}"},{"name":"StockCode","type":"\"string\"","metadata":"{}"},{"name":"Description","type":"\"string\"","metadata":"{}"},{"name":"Quantity","type":"\"integer\"","metadata":"{}"},{"name":"InvoiceDate","type":"\"timestamp\"","metadata":"{}"},{"name":"Price","type":"\"double\"","metadata":"{}"},{"name":"CustomerID","type":"\"double\"","metadata":"{}"},{"name":"Country","type":"\"string\"","metadata":"{}"}],"overflow":false,"aggData":[],"aggSchema":[],"aggOverflow":false,"aggSeriesLimitReached":false,"aggError":"","aggType":"","plotOptions":null,"isJsonSchema":true,"dbfsResultPath":null,"datasetInfos":[{"name":"df","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"Invoice","nullable":true,"type":"string"},{"metadata":{},"name":"StockCode","nullable":true,"type":"string"},{"metadata":{},"name":"Description","nullable":true,"type":"string"},{"metadata":{},"name":"Quantity","nullable":true,"type":"integer"},{"metadata":{},"name":"InvoiceDate","nullable":true,"type":"timestamp"},{"metadata":{},"name":"Price","nullable":true,"type":"double"},{"metadata":{},"name":"CustomerID","nullable":true,"type":"double"},{"metadata":{},"name":"Country","nullable":true,"type":"string"}],"type":"struct"},"tableIdentifier":null}],"columnCustomDisplayInfos":{},"metadata":{}},"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":1647364055573,"submitTime":1647364054986,"finishTime":1647364061221,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"1307","height":"319","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["table",10]],"nuid":"6482be4c-f067-47c9-b0ac-35c938b94601"},{"version":"CommandV1","origId":3660845094001479,"guid":"5de7d3c6-7818-42b8-a776-2d6f3ae89779","subtype":"command","commandType":"auto","position":3.375,"command":"# View schema\ndf.printSchema()","commandVersion":24,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">root\n |-- Invoice: string (nullable = true)\n |-- StockCode: string (nullable = true)\n |-- Description: string (nullable = true)\n |-- Quantity: integer (nullable = true)\n |-- InvoiceDate: timestamp (nullable = true)\n |-- Price: double (nullable = true)\n |-- CustomerID: double (nullable = true)\n |-- Country: string (nullable = true)\n\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[],"metadata":{}},"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":1647364061232,"submitTime":1647364054993,"finishTime":1647364061251,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["html",361]],"nuid":"47532335-0810-415e-a789-f7e70dd6cdf2"},{"version":"CommandV1","origId":3660845094001481,"guid":"04315635-a74f-43f9-86ab-2351f030e5ba","subtype":"command","commandType":"auto","position":3.65625,"command":"%md\n## Total Invoice Amount Distribution\nTask: Calculate the number of invoices","commandVersion":20,"state":"finished","results":null,"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":null,"nuid":"6d7372eb-a486-4739-9384-ecb90388f25c"},{"version":"CommandV1","origId":3660845094001482,"guid":"7fa81070-b26d-411a-bf7c-bb867dbe35e3","subtype":"command","commandType":"auto","position":3.703125,"command":"%md\n## Monthly Placed and Cancelled Orders\nTask: Find the number of placed and cancelled orders by month","commandVersion":25,"state":"finished","results":null,"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":null,"nuid":"e6998d67-eecc-456a-b824-084fd0d2cf57"},{"version":"CommandV1","origId":3660845094001483,"guid":"5f17d7c3-e57d-4e40-8177-bf3e9e613938","subtype":"command","commandType":"auto","position":2.0,"command":"%md\n## Dataframe Setup","commandVersion":7,"state":"finished","results":null,"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":null,"nuid":"202d04ab-4727-4e29-9c5e-aaa9d2771925"},{"version":"CommandV1","origId":3660845094001484,"guid":"b23fd1d8-0b32-45c9-9322-f25bee2dd46b","subtype":"command","commandType":"auto","position":3.7265625,"command":"# Create a dataframe containing invoice, month, customer ID, quantity, and price\nusers_df = (df\n            .select(\"Invoice\", \"InvoiceDate\", date_format(\"InvoiceDate\", \"YYYYMM\").alias(\"YYYYMM\"), \"CustomerID\", \"Quantity\", \"Price\")\n            .filter(df[\"Quantity\"] > 0)\n            .filter(df[\"Price\"] > 0)\n           )\n\n# Display the resulting dataframe\ndisplay(users_df.limit(10))","commandVersion":52,"state":"finished","results":{"type":"table","data":[["489434","2009-12-01T07:45:00.000+0000","200912",13085.0,12,6.95],["489434","2009-12-01T07:45:00.000+0000","200912",13085.0,12,6.75],["489434","2009-12-01T07:45:00.000+0000","200912",13085.0,12,6.75],["489434","2009-12-01T07:45:00.000+0000","200912",13085.0,48,2.1],["489434","2009-12-01T07:45:00.000+0000","200912",13085.0,24,1.25],["489434","2009-12-01T07:45:00.000+0000","200912",13085.0,24,1.65],["489434","2009-12-01T07:45:00.000+0000","200912",13085.0,24,1.25],["489434","2009-12-01T07:45:00.000+0000","200912",13085.0,10,5.95],["489435","2009-12-01T07:46:00.000+0000","200912",13085.0,12,2.55],["489435","2009-12-01T07:46:00.000+0000","200912",13085.0,12,3.75]],"arguments":{},"addedWidgets":{},"removedWidgets":[],"schema":[{"name":"Invoice","type":"\"string\"","metadata":"{}"},{"name":"InvoiceDate","type":"\"timestamp\"","metadata":"{}"},{"name":"YYYYMM","type":"\"string\"","metadata":"{}"},{"name":"CustomerID","type":"\"double\"","metadata":"{}"},{"name":"Quantity","type":"\"integer\"","metadata":"{}"},{"name":"Price","type":"\"double\"","metadata":"{}"}],"overflow":false,"aggData":[],"aggSchema":[],"aggOverflow":false,"aggSeriesLimitReached":false,"aggError":"","aggType":"","plotOptions":null,"isJsonSchema":true,"dbfsResultPath":null,"datasetInfos":[{"name":"users_df","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"Invoice","nullable":true,"type":"string"},{"metadata":{},"name":"InvoiceDate","nullable":true,"type":"timestamp"},{"metadata":{},"name":"YYYYMM","nullable":true,"type":"string"},{"metadata":{},"name":"CustomerID","nullable":true,"type":"double"},{"metadata":{},"name":"Quantity","nullable":true,"type":"integer"},{"metadata":{},"name":"Price","nullable":true,"type":"double"}],"type":"struct"},"tableIdentifier":null}],"columnCustomDisplayInfos":{},"metadata":{}},"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":1647364166028,"submitTime":1647364055322,"finishTime":1647364166459,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"811","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["table",10]],"nuid":"3bdf0c41-e044-4ffd-b778-b96a1c17b7a6"},{"version":"CommandV1","origId":3660845094001485,"guid":"248c81ae-86e8-46de-95f1-ffa3d4c89e7c","subtype":"command","commandType":"auto","position":3.71484375,"command":"%md\n## RFM Segmentation\nTask: Perform RFM segmentation","commandVersion":15,"state":"finished","results":null,"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":null,"nuid":"64a09c9f-9cd8-444b-a9a6-6a81b254af30"},{"version":"CommandV1","origId":3660845094001486,"guid":"7feeee4f-aeb2-4c4c-b8aa-952762fa6349","subtype":"command","commandType":"auto","position":3.708984375,"command":"%md\n## New and Existing Users\nTask: Find the number of new and existing users for each month","commandVersion":21,"state":"finished","results":null,"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":null,"nuid":"2f31dbcf-83ed-4422-86c5-9b1c1137e17a"},{"version":"CommandV1","origId":3660845094001487,"guid":"0561a332-3547-43b4-8aca-da25ddfa1f7f","subtype":"command","commandType":"auto","position":3.7060546875,"command":"%md\n## Monthly Active Users\nTask: Find the number of active users for each month","commandVersion":19,"state":"finished","results":null,"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":null,"nuid":"619c23f3-b8dc-4d82-9d6a-0419e9caedea"},{"version":"CommandV1","origId":3660845094001488,"guid":"8e269431-21b5-4005-a75d-1f5ad196206b","subtype":"command","commandType":"auto","position":3.70458984375,"command":"%md\n## Monthly Sales Growth\nTask: Calculate the monthly sales growth as a percentage","commandVersion":18,"state":"finished","results":null,"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":null,"nuid":"fdf82fb7-975e-4132-be35-d284a3dd9dbe"},{"version":"CommandV1","origId":3660845094001489,"guid":"59349e4a-a767-4b51-a4c7-ceb320184309","subtype":"command","commandType":"auto","position":3.703857421875,"command":"%md\n## Monthly Sales\nTask: Calculate the monthly total sales","commandVersion":27,"state":"finished","results":null,"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":null,"nuid":"4e455c2f-eeaa-4c4c-acff-ceb61ea14827"},{"version":"CommandV1","origId":3660845094001490,"guid":"f3c0ed4c-e453-4081-9815-89a7e468362a","subtype":"command","commandType":"auto","position":3.7119140625,"command":"# Create a dataframe containing month and customer ID\nnew_old_users_df = df.select(\"CustomerID\", date_format(\"InvoiceDate\", \"YYYYMM\").alias(\"YYYYMM\"))\n\n# Display the resulting dataframe\ndisplay(new_old_users_df.limit(10))","commandVersion":52,"state":"finished","results":{"type":"table","data":[[13085.0,"200912"],[13085.0,"200912"],[13085.0,"200912"],[13085.0,"200912"],[13085.0,"200912"],[13085.0,"200912"],[13085.0,"200912"],[13085.0,"200912"],[13085.0,"200912"],[13085.0,"200912"]],"arguments":{},"addedWidgets":{},"removedWidgets":[],"schema":[{"name":"CustomerID","type":"\"double\"","metadata":"{}"},{"name":"YYYYMM","type":"\"string\"","metadata":"{}"}],"overflow":false,"aggData":[],"aggSchema":[],"aggOverflow":false,"aggSeriesLimitReached":false,"aggError":"","aggType":"","plotOptions":null,"isJsonSchema":true,"dbfsResultPath":null,"datasetInfos":[{"name":"new_old_users_df","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"CustomerID","nullable":true,"type":"double"},{"metadata":{},"name":"YYYYMM","nullable":true,"type":"string"}],"type":"struct"},"tableIdentifier":null}],"columnCustomDisplayInfos":{},"metadata":{}},"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":1647364115000,"submitTime":1647364055203,"finishTime":1647364115287,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"284","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["table",10]],"nuid":"ec6347fc-5a0f-4d55-80f5-ad58158d9882"},{"version":"CommandV1","origId":3660845094001491,"guid":"09b8f1ce-6cad-4819-9fa9-71c938421839","subtype":"command","commandType":"auto","position":3.70751953125,"command":"# Create a dataframe containing month and customer ID, grouped by month\nmonthly_users_df = (df\n                    .select(\"CustomerID\", date_format(\"InvoiceDate\", \"YYYYMM\").alias(\"YYYYMM\"))\n                    .groupBy(\"YYYYMM\").agg(expr(\"COUNT(DISTINCT CustomerID)\").alias(\"UniqueCustomers\"))\n                    .orderBy(\"YYYYMM\")\n                   )\n\n# Display the resulting dataframe\ndisplay(monthly_users_df)","commandVersion":43,"state":"finished","results":{"type":"table","data":[["200912",1045],["201001",786],["201002",807],["201003",1111],["201004",998],["201005",1062],["201006",1095],["201007",988],["201008",964],["201009",1202],["201010",1577],["201011",1683],["201012",948],["201101",783],["201102",798],["201103",1020],["201104",899],["201105",1079],["201106",1051],["201107",993],["201108",980],["201109",1302],["201110",1425],["201111",1711],["201112",686]],"arguments":{},"addedWidgets":{},"removedWidgets":[],"schema":[{"name":"YYYYMM","type":"\"string\"","metadata":"{}"},{"name":"UniqueCustomers","type":"\"long\"","metadata":"{}"}],"overflow":false,"aggData":[],"aggSchema":[],"aggOverflow":false,"aggSeriesLimitReached":false,"aggError":"","aggType":"","plotOptions":null,"isJsonSchema":true,"dbfsResultPath":null,"datasetInfos":[{"name":"monthly_users_df","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"YYYYMM","nullable":true,"type":"string"},{"metadata":{},"name":"UniqueCustomers","nullable":false,"type":"long"}],"type":"struct"},"tableIdentifier":null}],"columnCustomDisplayInfos":{},"metadata":{}},"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":1647364563162,"submitTime":1647364563152,"finishTime":1647364567496,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"322","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["table",25]],"nuid":"bedf3662-c0b5-4728-b190-b0638ad2f08b"},{"version":"CommandV1","origId":3660845094001492,"guid":"3ccc9742-dba7-4b93-8aa0-bab76506e4ed","subtype":"command","commandType":"auto","position":3.705322265625,"command":"# Add \"LastMonthAmount\" column\nsales_growth_df = (sales_df\n                   .withColumn(\"LastMonthAmount\", lag(\"Amount\").over(Window().partitionBy().orderBy(col(\"YYYYMM\"))))\n                   .withColumn(\"LastMonthAmount\", coalesce(\"LastMonthAmount\", \"Amount\"))\n                  )\n\n# Add \"Growth\" column\nsales_growth_df = sales_growth_df.withColumn(\"Growth\", sales_growth_df[\"Amount\"] / sales_growth_df[\"LastMonthAmount\"] - 1)\n\n# Display the resulting dataframe\ndisplay(sales_growth_df)","commandVersion":166,"state":"finished","results":{"type":"table","data":[["200912",390286,106525.29999998609,663272.0499999978,663272.0499999978,0.0],["201001",367141,105352.01199999148,531952.9020000178,663272.0499999978,-0.19798685622284318],["201002",366317,81499.0959999923,489399.58600001415,531952.9020000178,-0.07999451801092394],["201003",499030,182832.18100002385,635996.4810000026,489399.58600001415,0.29954437885442786],["201004",345590,114226.56199999303,560635.0220000078,635996.4810000026,-0.11849351568974242],["201005",369726,99087.9099999871,559924.5500000105,560635.0220000078,-0.0012672629645268385],["201006",376237,145131.41000000422,571459.9100000149,559924.5500000105,0.02060163284500427],["201007",319573,105398.76999999318,562785.900000009,571459.9100000149,-0.015178685062974484],["201008",446926,90059.35999998971,587256.4599999989,562785.900000009,0.04348111777496477],["201009",474112,142728.65099999652,781033.3009999989,587256.4599999989,0.3299697052289563],["201010",587157,212008.83000007854,964989.7799999118,781033.3009999989,0.23552962308314318],["201011",638690,191337.30200005963,1134879.281999888,964989.7799999118,0.1760531619308876],["201012",442816,133053.04999998535,859227.3699999922,1134879.281999888,-0.24289095445829356],["201101",269379,73202.31999999017,475074.38000001636,859227.3699999922,-0.44709119310291445],["201102",262833,67529.42999999116,436546.1500000147,475074.38000001636,-0.08109936385119387],["201103",344012,96183.23999998631,579964.6100000151,436546.1500000147,0.32852989311667424],["201104",278585,91117.72099998788,426047.8510000125,579964.6100000151,-0.2653899157743411],["201105",367852,125537.65999997953,648251.080000003,426047.8510000125,0.5215452407011061],["201106",356922,129301.44999998451,608013.1600000106,648251.080000003,-0.062071504763234864],["201107",363418,92754.52099998882,574238.481000012,608013.1600000106,-0.055549256532536284],["201108",386612,88126.74999999513,616368.0000000079,574238.481000012,0.07336589308091845],["201109",537496,126029.42199998388,931440.3719999959,616368.0000000079,0.5111757456584118],["201110",569666,186583.00000001857,974603.5899999909,931440.3719999959,0.046340291120637866],["201111",669915,195298.52000003058,1132407.7399999578,974603.5899999909,0.161916241248371],["201112",203837,50116.73999999839,342524.3800000034,1132407.7399999578,-0.6975255750194571]],"arguments":{},"addedWidgets":{},"removedWidgets":[],"schema":[{"name":"YYYYMM","type":"\"string\"","metadata":"{}"},{"name":"Quantity","type":"\"long\"","metadata":"{}"},{"name":"Price","type":"\"double\"","metadata":"{}"},{"name":"Amount","type":"\"double\"","metadata":"{}"},{"name":"LastMonthAmount","type":"\"double\"","metadata":"{}"},{"name":"Growth","type":"\"double\"","metadata":"{}"}],"overflow":false,"aggData":[],"aggSchema":[],"aggOverflow":false,"aggSeriesLimitReached":false,"aggError":"","aggType":"","plotOptions":null,"isJsonSchema":true,"dbfsResultPath":null,"datasetInfos":[{"name":"sales_growth_df","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"YYYYMM","nullable":true,"type":"string"},{"metadata":{},"name":"Quantity","nullable":true,"type":"long"},{"metadata":{},"name":"Price","nullable":true,"type":"double"},{"metadata":{},"name":"Amount","nullable":true,"type":"double"},{"metadata":{},"name":"LastMonthAmount","nullable":true,"type":"double"},{"metadata":{},"name":"Growth","nullable":true,"type":"double"}],"type":"struct"},"tableIdentifier":null}],"columnCustomDisplayInfos":{},"metadata":{}},"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":1647364541561,"submitTime":1647364541550,"finishTime":1647364545730,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"905","height":"320","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["table",25]],"nuid":"bce6943b-2d23-4c35-b105-6a9c34d65c6e"},{"version":"CommandV1","origId":3660845094001493,"guid":"cdf4f6f9-c6b6-4dec-a5e4-29b99536cf02","subtype":"command","commandType":"auto","position":3.7042236328125,"command":"# Display dataframe\ndisplay(df.limit(10))","commandVersion":12,"state":"finished","results":{"type":"table","data":[["489434","85048","15CM CHRISTMAS GLASS BALL 20 LIGHTS",12,"2009-12-01T07:45:00.000+0000",6.95,13085.0,"United Kingdom"],["489434","79323P","PINK CHERRY LIGHTS",12,"2009-12-01T07:45:00.000+0000",6.75,13085.0,"United Kingdom"],["489434","79323W"," WHITE CHERRY LIGHTS",12,"2009-12-01T07:45:00.000+0000",6.75,13085.0,"United Kingdom"],["489434","22041","\"RECORD FRAME 7\"\" SINGLE SIZE \"",48,"2009-12-01T07:45:00.000+0000",2.1,13085.0,"United Kingdom"],["489434","21232","STRAWBERRY CERAMIC TRINKET BOX",24,"2009-12-01T07:45:00.000+0000",1.25,13085.0,"United Kingdom"],["489434","22064","PINK DOUGHNUT TRINKET POT ",24,"2009-12-01T07:45:00.000+0000",1.65,13085.0,"United Kingdom"],["489434","21871","SAVE THE PLANET MUG",24,"2009-12-01T07:45:00.000+0000",1.25,13085.0,"United Kingdom"],["489434","21523","FANCY FONT HOME SWEET HOME DOORMAT",10,"2009-12-01T07:45:00.000+0000",5.95,13085.0,"United Kingdom"],["489435","22350","CAT BOWL ",12,"2009-12-01T07:46:00.000+0000",2.55,13085.0,"United Kingdom"],["489435","22349","DOG BOWL , CHASING BALL DESIGN",12,"2009-12-01T07:46:00.000+0000",3.75,13085.0,"United Kingdom"]],"arguments":{},"addedWidgets":{},"removedWidgets":[],"schema":[{"name":"Invoice","type":"\"string\"","metadata":"{}"},{"name":"StockCode","type":"\"string\"","metadata":"{}"},{"name":"Description","type":"\"string\"","metadata":"{}"},{"name":"Quantity","type":"\"integer\"","metadata":"{}"},{"name":"InvoiceDate","type":"\"timestamp\"","metadata":"{}"},{"name":"Price","type":"\"double\"","metadata":"{}"},{"name":"CustomerID","type":"\"double\"","metadata":"{}"},{"name":"Country","type":"\"string\"","metadata":"{}"}],"overflow":false,"aggData":[],"aggSchema":[],"aggOverflow":false,"aggSeriesLimitReached":false,"aggError":"","aggType":"","plotOptions":null,"isJsonSchema":true,"dbfsResultPath":null,"datasetInfos":[],"columnCustomDisplayInfos":{},"metadata":{}},"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":1647364519606,"submitTime":1647364519599,"finishTime":1647364519902,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"1295","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["table",10]],"nuid":"731149f9-6af9-4930-ab6c-e040c1ac0d39"},{"version":"CommandV1","origId":3660845094001494,"guid":"09674aed-1251-4f33-afdc-86cdb74596d5","subtype":"command","commandType":"auto","position":3.7034912109375,"command":"# Select Invoices and date (formatted as YYYYMM), then drop NA values\nplaced_cancelled_df = df.select(\"Invoice\", date_format(\"InvoiceDate\", \"YYYYMM\").alias(\"YYYYMM\"))\n\n# Display the resulting dataframe\ndisplay(placed_cancelled_df.limit(10))","commandVersion":168,"state":"finished","results":{"type":"table","data":[["489434","200912"],["489434","200912"],["489434","200912"],["489434","200912"],["489434","200912"],["489434","200912"],["489434","200912"],["489434","200912"],["489435","200912"],["489435","200912"]],"arguments":{},"addedWidgets":{},"removedWidgets":[],"schema":[{"name":"Invoice","type":"\"string\"","metadata":"{}"},{"name":"YYYYMM","type":"\"string\"","metadata":"{}"}],"overflow":false,"aggData":[],"aggSchema":[],"aggOverflow":false,"aggSeriesLimitReached":false,"aggError":"","aggType":"","plotOptions":null,"isJsonSchema":true,"dbfsResultPath":null,"datasetInfos":[{"name":"placed_cancelled_df","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"Invoice","nullable":true,"type":"string"},{"metadata":{},"name":"YYYYMM","nullable":true,"type":"string"}],"type":"struct"},"tableIdentifier":null}],"columnCustomDisplayInfos":{},"metadata":{}},"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":1647364438756,"submitTime":1647364438747,"finishTime":1647364439012,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"273","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["table",10]],"nuid":"e9ac86f6-cfc1-4537-b377-9441d1995289"},{"version":"CommandV1","origId":3660845094001495,"guid":"ef9210f5-3bc1-4a97-aaac-01cfdaa87d25","subtype":"command","commandType":"auto","position":3.6796875,"command":"# Filter out cancelled records\nfilled = df.filter(df[\"Quantity\"] > 0).filter(df[\"Price\"] > 0)\n\n# Add \"Amount\" column\ninvoices = filled.withColumn(\"Amount\", filled[\"Quantity\"] * filled[\"Price\"]).groupby([\"Invoice\"]).sum()\n\n# Fix column names and drop \"CustomerID\"\ninvoices = (invoices\n            .drop(\"sum(CustomerID)\")\n            .withColumnRenamed(\"sum(Quantity)\", \"Quantity\")\n            .withColumnRenamed(\"sum(Price)\", \"Price\")\n            .withColumnRenamed(\"sum(Amount)\", \"Amount\")\n           )\n\n# Display the resulting dataframe\ndisplay(invoices.limit(10))","commandVersion":188,"state":"finished","results":{"type":"table","data":[["489677",48,8.0,192.0],["491045",64,59.5,303.2],["491658",61,111.05000000000001,155.05999999999997],["493542",71,59.84,118.75],["493977",68,95.65,275.95],["494244",4980,30.699999999999996,6711.0],["494277",804,10.69,1335.92],["495185",776,202.83999999999995,2507.06],["495783",1,48.96,48.96],["496171",14,39.849999999999994,199.29999999999998]],"arguments":{},"addedWidgets":{},"removedWidgets":[],"schema":[{"name":"Invoice","type":"\"string\"","metadata":"{}"},{"name":"Quantity","type":"\"long\"","metadata":"{}"},{"name":"Price","type":"\"double\"","metadata":"{}"},{"name":"Amount","type":"\"double\"","metadata":"{}"}],"overflow":false,"aggData":[],"aggSchema":[],"aggOverflow":false,"aggSeriesLimitReached":false,"aggError":"","aggType":"","plotOptions":null,"isJsonSchema":true,"dbfsResultPath":null,"datasetInfos":[{"name":"filled","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"Invoice","nullable":true,"type":"string"},{"metadata":{},"name":"StockCode","nullable":true,"type":"string"},{"metadata":{},"name":"Description","nullable":true,"type":"string"},{"metadata":{},"name":"Quantity","nullable":true,"type":"integer"},{"metadata":{},"name":"InvoiceDate","nullable":true,"type":"timestamp"},{"metadata":{},"name":"Price","nullable":true,"type":"double"},{"metadata":{},"name":"CustomerID","nullable":true,"type":"double"},{"metadata":{},"name":"Country","nullable":true,"type":"string"}],"type":"struct"},"tableIdentifier":null},{"name":"invoices","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"Invoice","nullable":true,"type":"string"},{"metadata":{},"name":"Quantity","nullable":true,"type":"long"},{"metadata":{},"name":"Price","nullable":true,"type":"double"},{"metadata":{},"name":"Amount","nullable":true,"type":"double"}],"type":"struct"},"tableIdentifier":null}],"columnCustomDisplayInfos":{},"metadata":{}},"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":1647364067201,"submitTime":1647364055024,"finishTime":1647364071079,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"751","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["table",10]],"nuid":"8c8036f6-501a-4f5c-887c-b599ac7b77f6"},{"version":"CommandV1","origId":3660845094001497,"guid":"10959a91-def5-421a-bd80-7410e1f0d062","subtype":"command","commandType":"auto","position":3.609375,"command":"# View summary statistics\ndf.describe().show()","commandVersion":33,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">+-------+------------------+------------------+--------------------+------------------+------------------+------------------+-----------+\n|summary|           Invoice|         StockCode|         Description|          Quantity|             Price|        CustomerID|    Country|\n+-------+------------------+------------------+--------------------+------------------+------------------+------------------+-----------+\n|  count|            824364|            824364|              824364|            824364|            824364|            824364|     824364|\n|   mean| 537410.8855639135|28826.655026367764|                null|12.414574144431343|3.6767995788248706| 15324.63850435002|       null|\n| stddev|26666.396588957836| 18528.79298168221|                null|188.97609900975917| 70.24138768949338|1697.4644503793172|       null|\n|    min|            489434|             10002|  DOORMAT UNION J...|            -80995|               0.0|           12346.0|  Australia|\n|    max|           C581569|           TEST002|ZINC WIRE SWEETHE...|             80995|           38970.0|           18287.0|West Indies|\n+-------+------------------+------------------+--------------------+------------------+------------------+------------------+-----------+\n\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[],"metadata":{}},"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":1647364061256,"submitTime":1647364055001,"finishTime":1647364067196,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["html",1270]],"nuid":"4a9e0e9d-c411-4668-8976-452d7067e7f7"},{"version":"CommandV1","origId":3829185748740845,"guid":"f549394f-8307-4d8f-b709-7c6ea38c3ef9","subtype":"command","commandType":"auto","position":3.69140625,"command":"# Calculate invoice count\ninvoice_count = invoices.count()\n\n# Calculate average invoice amount\navg_amount = str(invoices.select(format_number(avg(\"Amount\"),2)).first()[0])\n\n# Print number of invoices and average invoice amount\nprint(\"There are \" + str(invoice_count) + \" invoices in the dataset, with an average amount of $\" + avg_amount + \".\")","commandVersion":210,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">There are 36969 invoices in the dataset, with an average amount of $479.95.\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[],"metadata":{}},"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":1647364071088,"submitTime":1647364055033,"finishTime":1647364079341,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["html",103]],"nuid":"4b82a587-a90e-4fbd-8c6c-0c1ea744ed18"},{"version":"CommandV1","origId":3829185748740846,"guid":"7de3b3f4-1abe-4b6d-b37e-bd3a2c507c6f","subtype":"command","commandType":"auto","position":3.70367431640625,"command":"# Create a dataframe containing all cancelled invoices, then group by month\ncancelled_df = (placed_cancelled_df\n                .filter(col(\"Invoice\").startswith(\"C\"))\n                .withColumnRenamed(\"Invoice\", \"Cancelled\")\n                .groupBy(\"YYYYMM\").agg(expr(\"COUNT(DISTINCT Cancelled)\").alias(\"Cancelled\"))\n                .orderBy(col(\"YYYYMM\").asc())\n               )\n\n# Display the resulting dataframe\ndisplay(cancelled_df)","commandVersion":141,"state":"finished","results":{"type":"table","data":[["200912",388],["201001",285],["201002",229],["201003",383],["201004",286],["201005",391],["201006",336],["201007",332],["201008",254],["201009",352],["201010",453],["201011",558],["201012",308],["201101",249],["201102",204],["201103",298],["201104",235],["201105",294],["201106",314],["201107",262],["201108",263],["201109",322],["201110",334],["201111",428],["201112",143]],"arguments":{},"addedWidgets":{},"removedWidgets":[],"schema":[{"name":"YYYYMM","type":"\"string\"","metadata":"{}"},{"name":"Cancelled","type":"\"long\"","metadata":"{}"}],"overflow":false,"aggData":[],"aggSchema":[],"aggOverflow":false,"aggSeriesLimitReached":false,"aggError":"","aggType":"","plotOptions":null,"isJsonSchema":true,"dbfsResultPath":null,"datasetInfos":[{"name":"cancelled_df","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"YYYYMM","nullable":true,"type":"string"},{"metadata":{},"name":"Cancelled","nullable":false,"type":"long"}],"type":"struct"},"tableIdentifier":null}],"columnCustomDisplayInfos":{},"metadata":{}},"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":1647364460374,"submitTime":1647364460367,"finishTime":1647364464229,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"348","height":"273","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["table",25]],"nuid":"c18a1b7b-f1b8-4c90-9457-d4e65059ebb4"},{"version":"CommandV1","origId":3829185748740847,"guid":"520747e2-8a47-4d8e-9d28-0163d318ba95","subtype":"command","commandType":"auto","position":3.703582763671875,"command":"# Create a dataframe containing all invoices grouped by month\ntotal_df = (placed_cancelled_df\n            .withColumnRenamed(\"Invoice\", \"Total\")\n            .groupBy(\"YYYYMM\").agg(expr(\"COUNT(DISTINCT Total)\").alias(\"Total\"))\n            .orderBy(col(\"YYYYMM\").asc())\n           )\n\n# Display the resulting dataframe\ndisplay(total_df)","commandVersion":52,"state":"finished","results":{"type":"table","data":[["200912",1900],["201001",1296],["201002",1335],["201003",1907],["201004",1615],["201005",1768],["201006",1833],["201007",1713],["201008",1547],["201009",2041],["201010",2586],["201011",3145],["201012",1708],["201101",1236],["201102",1202],["201103",1619],["201104",1384],["201105",1849],["201106",1707],["201107",1593],["201108",1544],["201109",2078],["201110",2263],["201111",3086],["201112",921]],"arguments":{},"addedWidgets":{},"removedWidgets":[],"schema":[{"name":"YYYYMM","type":"\"string\"","metadata":"{}"},{"name":"Total","type":"\"long\"","metadata":"{}"}],"overflow":false,"aggData":[],"aggSchema":[],"aggOverflow":false,"aggSeriesLimitReached":false,"aggError":"","aggType":"","plotOptions":null,"isJsonSchema":true,"dbfsResultPath":null,"datasetInfos":[{"name":"total_df","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"YYYYMM","nullable":true,"type":"string"},{"metadata":{},"name":"Total","nullable":false,"type":"long"}],"type":"struct"},"tableIdentifier":null}],"columnCustomDisplayInfos":{},"metadata":{}},"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":1647364447193,"submitTime":1647364447184,"finishTime":1647364451755,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"273","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["table",25]],"nuid":"832a2b7d-9a6c-4ffc-abed-331cb2b26ce0"},{"version":"CommandV1","origId":3829185748740848,"guid":"a8fd7b31-04c9-458c-975b-f95f123fb87c","subtype":"command","commandType":"auto","position":3.703765869140625,"command":"# Join total and cancelled dataframes on month\nall_orders_df = (total_df\n                 .join(cancelled_df,\"YYYYMM\",\"inner\")\n                 .orderBy(col(\"YYYYMM\").asc())\n                )\n\n# Calculate number of placed invoices\nall_orders_df = all_orders_df.withColumn(\"Placed\", all_orders_df[\"Total\"] - (all_orders_df[\"Cancelled\"] * 2))\n\n# Display the resulting dataframe\ndisplay(all_orders_df)","commandVersion":112,"state":"finished","results":{"type":"table","data":[["200912",1900,388,1124],["201001",1296,285,726],["201002",1335,229,877],["201003",1907,383,1141],["201004",1615,286,1043],["201005",1768,391,986],["201006",1833,336,1161],["201007",1713,332,1049],["201008",1547,254,1039],["201009",2041,352,1337],["201010",2586,453,1680],["201011",3145,558,2029],["201012",1708,308,1092],["201101",1236,249,738],["201102",1202,204,794],["201103",1619,298,1023],["201104",1384,235,914],["201105",1849,294,1261],["201106",1707,314,1079],["201107",1593,262,1069],["201108",1544,263,1018],["201109",2078,322,1434],["201110",2263,334,1595],["201111",3086,428,2230],["201112",921,143,635]],"arguments":{},"addedWidgets":{},"removedWidgets":[],"schema":[{"name":"YYYYMM","type":"\"string\"","metadata":"{}"},{"name":"Total","type":"\"long\"","metadata":"{}"},{"name":"Cancelled","type":"\"long\"","metadata":"{}"},{"name":"Placed","type":"\"long\"","metadata":"{}"}],"overflow":false,"aggData":[],"aggSchema":[],"aggOverflow":false,"aggSeriesLimitReached":false,"aggError":"","aggType":"","plotOptions":null,"isJsonSchema":true,"dbfsResultPath":null,"datasetInfos":[{"name":"all_orders_df","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"YYYYMM","nullable":true,"type":"string"},{"metadata":{},"name":"Total","nullable":false,"type":"long"},{"metadata":{},"name":"Cancelled","nullable":false,"type":"long"},{"metadata":{},"name":"Placed","nullable":false,"type":"long"}],"type":"struct"},"tableIdentifier":null}],"columnCustomDisplayInfos":{},"metadata":{}},"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":1647364484200,"submitTime":1647364484193,"finishTime":1647364494223,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"474","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["table",25]],"nuid":"2d5caba7-e16e-498b-9dc9-2214eefa38b3"},{"version":"CommandV1","origId":1172681584363095,"guid":"22ed540b-8f42-4ffb-be1b-cec8f8b94dc0","subtype":"command","commandType":"auto","position":3.7382810711860657,"command":"# Create a UDF to find the percentage of total\nfrom pyspark.sql.types import StringType\npercentage_total = udf(lambda x: ((100 * x) / total_customers), StringType())\n\n# Create a dataframe containing segments and the number of customers in each segment\nsegment_counts = (rfm_table_segments\n                  .select(\"Segment\", \"CustomerID\")\n                  .groupBy(\"Segment\").agg(count(\"CustomerID\"))\n                  .withColumnRenamed(\"count(CustomerID)\", \"CustomerIDCount\")\n                 )\n\n# Add a percentage total column\nsegment_counts = (segment_counts\n                  .withColumn(\"PercentageTotal\", percentage_total(segment_counts.CustomerIDCount))\n                  .orderBy(\"CustomerIDCount\", ascending=[0])\n                 )\n\n# Display the resulting dataframe\ndisplay(segment_counts)","commandVersion":33,"state":"finished","results":{"type":"table","data":[["Hibernating",1526,"25.961211296359306"],["Loyal Customer",1175,"19.989792446410345"],["Champions",822,"13.984348417829194"],["At Risk",753,"12.810479755018713"],["Potential Loyalists",713,"12.129976182374957"],["About to Sleep",385,"6.549846886696155"],["Need Attention",267,"4.542361347397073"],["Promising",110,"1.87138482477033"],["Can't Lose",71,"1.2078938414426676"],["New Customers",56,"0.9527050017012589"]],"arguments":{},"addedWidgets":{},"removedWidgets":[],"schema":[{"name":"Segment","type":"\"string\"","metadata":"{}"},{"name":"CustomerIDCount","type":"\"long\"","metadata":"{}"},{"name":"PercentageTotal","type":"\"string\"","metadata":"{}"}],"overflow":false,"aggData":[],"aggSchema":[],"aggOverflow":false,"aggSeriesLimitReached":false,"aggError":"","aggType":"","plotOptions":null,"isJsonSchema":true,"dbfsResultPath":null,"datasetInfos":[{"name":"segment_counts","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"Segment","nullable":true,"type":"string"},{"metadata":{},"name":"CustomerIDCount","nullable":false,"type":"long"},{"metadata":{},"name":"PercentageTotal","nullable":true,"type":"string"}],"type":"struct"},"tableIdentifier":null}],"columnCustomDisplayInfos":{},"metadata":{}},"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":1647364377634,"submitTime":1647364055436,"finishTime":1647364398363,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"518","height":"332","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["table",10]],"nuid":"fd78cf81-c5d1-4c72-8502-73a2ef9f0631"}],"dashboards":[],"guid":"e27f9289-4374-4576-8953-1953f5ade7f3","globalVars":{},"iPythonMetadata":null,"inputWidgets":{},"notebookMetadata":{"pythonIndentUnit":4}}